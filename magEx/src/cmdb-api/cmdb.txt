1、存储、查询   +  -> 倒排索引
2、自定义表结构    -> 文档数据库：mongodb
3、支持外键        -> RDBMS
4、API          +
5、历史版本        -> append only
6、事务         *  -> 非原子操作


entity -> json

schema -> field {
  ref -> schema.field
}


文档数据库：mongodb、elasticsearch、rika

B+ Tree

倒排索引：

{
   "uuid": "xxxxxxxx",
   "ip": "127.0.0.1",
   "hostname": "localhost"
}

localhost -> xxxxxxxx
127.0.0.1 -> xxxxxxxx



schema =>  数据的结构 => {
    1、名字
    2、主键
    3、Fields
    4、version
    5、timestamp
}

field => 描述一列数据的属性 => {
   1、名字
   2、类型
   3、唯一
   4、多值
   5、必须
   6、ref -> schema::field
}

entity => 实际的数据 => {
    1、_meta:{
        1、schema
        2、version
        3、timestamp
    }
    ...
}


schema 创建 和 更新
0、加锁 /cmdb/lock/schema_name
1、检查schema的合法性
   1、检查是否存在
2、计算版本号
3、创建mapping
4、写history
5、写current
-1、 解锁


entity 创建和更新
0、加锁
1、检查entity的合法性
    1、获取到schema
    2、逐个字段检查
2、计算版本号
3、写history
4、写current
-1、解锁


elasticsearch: 同一个索引下，同名字段，类型必须相同

1、index
2、type
3、doc

mapping：规范了存入elasticsearch的数据类型，数据类型决定了检索方式


schema: {
    schema:
    schema_history:
    entity:
    entity_history:
}